@startuml
!include style.puml
'https://plantuml.com/sequence-diagram

box Main STORAGE_COLOR_T1

participant ":MainApp" as MainApp STORAGE_COLOR
end box


'box Logic LOGIC_COLOR_T1
'
'participant ":ModelManager" as ModelManager LOGIC_COLOR
'participant ":AddressBook" as AddressBook LOGIC_COLOR
'
'end box

box Model MODEL_COLOR_T1
participant "reminderList:UniqueReminderList" as UniqueReminderList MODEL_COLOR
participant "reminder:Reminder" as Reminder MODEL_COLOR
participant ":Company" as Company MODEL_COLOR
participant ":ModelManager" as ModelManager MODEL_COLOR
end box

box Storage LOGIC_COLOR_T1
participant ":Storage" as Storage LOGIC_COLOR
'participant ":JsonSerializableCompanyList" as JsonCompanyList LOGIC_COLOR
'participant ":JsonAdaptedCompany" as JsonAdaptedCompany LOGIC_COLOR
end box

MainApp -> MainApp : initModelManager(Storage, ReadOnlyUserPrefs)

MainApp -> UniqueReminderList : getInstance()
activate UniqueReminderList

UniqueReminderList --> MainApp : reminderList
deactivate UniqueReminderList


MainApp -> Storage : readCompanyList()
activate Storage
Storage --> MainApp : companyList
deactivate Storage

MainApp -> UniqueReminderList : setReminders(companyList)
activate UniqueReminderList

loop for each company in companyList
UniqueReminderList -> Company :getRoleList()
deactivate UniqueReminderList
activate Company

Company --> UniqueReminderList : roleList
deactivate Company
activate UniqueReminderList
loop for each role in roleList
UniqueReminderList -> UniqueReminderList : addFromRole(Company, Role)
activate UniqueReminderList
opt role reminder date is within reminder window
create Reminder
UniqueReminderList -> Reminder : Reminder(CompanyName, RoleName, Status, ReminderDate)
activate Reminder
deactivate UniqueReminderList
Reminder --> UniqueReminderList : reminder
deactivate Reminder

activate UniqueReminderList
UniqueReminderList -> UniqueReminderList : add(reminder)
deactivate UniqueReminderList

end
end

create ModelManager
UniqueReminderList -> ModelManager :ModelManager(ReadOnlyCompanyList, ReadOnlyUserPrefs, ReminderList)
activate ModelManager
deactivate UniqueReminderList
ModelManager --> MainApp :ModelManager






'
'Storage -> JsonCompanyList :toModelType()
'deactivate Storage
'activate JsonCompanyList
'
'create CompanyList
'JsonCompanyList -> CompanyList : CompanyList()
'activate CompanyList
'deactivate JsonCompanyList
'
'CompanyList --> JsonCompanyList :companyList
'deactivate CompanyList
'
'activate JsonCompanyList
'loop companyListSize
'JsonCompanyList -> JsonAdaptedCompany :toModelType()
'deactivate JsonCompanyList
'activate JsonAdaptedCompany
'
'loop
'JsonAdaptedCompany ->
'JsonAdaptedCompany --> JsonCompanyList :company
'deactivate JsonAdaptedCompany
'end


'create ModelManager
'MainApp -> ModelManager
'activate ModelManager
'
'
'create Summary
'ModelManager -> Summary : Summary(ReadOnlyAddressBook)
'activate Summary
'
'Summary -> AddressBook : getContactList()
'activate AddressBook
'
'AddressBook --> Summary : contactList
'deactivate AddressBook
'
'Summary -> Summary : setNumberOfContacts()
'activate Summary
'
'Summary --> Summary
'deactivate Summary
'
'Summary -> Summary : setPercentageRatings()
'activate Summary
'
'loop addressBookSize
'Summary -> Contact : getRating()
'activate Contact
'
'Contact --> Summary
'deactivate Contact
'end
'Summary --> Summary
'deactivate Summary
'
'Summary -> Summary : setPercentageCategory()
'activate Summary
'
'loop addressBookSize
'Summary -> Contact : getCategoryCode()
'activate Contact
'
'Contact --> Summary
'deactivate Contact
'end
'
'Summary --> Summary
'deactivate Summary
'
'Summary --> ModelManager : summary
'deactivate Summary
'
'ModelManager --> MainApp : model
'deactivate ModelManager




@enduml